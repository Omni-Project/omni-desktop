Object.defineProperty(exports,"__esModule",{value:true});var _omit2=require("lodash/omit");var _omit3=_interopRequireDefault(_omit2);var _isFunction2=require("lodash/isFunction");var _isFunction3=_interopRequireDefault(_isFunction2);var _defaults2=require("lodash/defaults");var _defaults3=_interopRequireDefault(_defaults2);var _assign2=require("lodash/assign");var _assign3=_interopRequireDefault(_assign2);
var _d3Shape=require("d3-shape");var d3Shape=_interopRequireWildcard(_d3Shape);

var _victoryCore=require("victory-core");function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key];}}newObj.default=obj;return newObj;}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}exports.default=

{
degreesToRadians:function degreesToRadians(degrees){
return degrees*(Math.PI/180);
},

checkForValidText:function checkForValidText(text){
if(text===undefined||text===null){
return text;
}else{
return""+text;
}
},

getSliceStyle:function getSliceStyle(datum,index,calculatedValues){var
style=calculatedValues.style,colors=calculatedValues.colors;
var fill=this.getColor(style,colors,index);
var dataStyles=(0,_omit3.default)(datum,["_x","_y","label"]);
return(0,_defaults3.default)({},{fill:fill},style.data,dataStyles);
},

getBaseProps:function getBaseProps(props,fallbackProps){
props=_victoryCore.Helpers.modifyProps(props,fallbackProps,"pie");
var calculatedValues=this.getCalculatedValues(props);var
slices=calculatedValues.slices,style=calculatedValues.style,pathFunction=calculatedValues.pathFunction,data=calculatedValues.data;
var childProps={
parent:{
standalone:props.standalone,slices:slices,pathFunction:pathFunction,
width:props.width,height:props.height,style:style.parent}};



for(var index=0,len=slices.length;index<len;index++){
var slice=slices[index];
var datum=data[index];
var eventKey=datum.eventKey||index;
var dataProps={
index:index,slice:slice,pathFunction:pathFunction,datum:datum,data:data,
style:this.getSliceStyle(datum,index,calculatedValues)};


childProps[eventKey]={
data:dataProps,
labels:this.getLabelProps(props,dataProps,calculatedValues)};

}
return childProps;
},

getLabelProps:function getLabelProps(props,dataProps,calculatedValues){var
index=dataProps.index,datum=dataProps.datum,data=dataProps.data,slice=dataProps.slice;var
style=calculatedValues.style,radius=calculatedValues.radius;
var labelStyle=(0,_assign3.default)({padding:0},style.labels);
var labelRadius=_victoryCore.Helpers.evaluateProp(props.labelRadius,datum);
var labelPosition=this.getLabelPosition(radius,labelRadius,labelStyle);
var position=labelPosition.centroid(slice);
var orientation=this.getLabelOrientation(slice);
return{
index:index,datum:datum,data:data,slice:slice,orientation:orientation,
style:labelStyle,
x:position[0],
y:position[1],
text:this.getLabelText(props,datum,index),
textAnchor:labelStyle.textAnchor||this.getTextAnchor(orientation),
verticalAnchor:labelStyle.verticalAnchor||this.getVerticalAnchor(orientation),
angle:labelStyle.angle};

},

getCalculatedValues:function getCalculatedValues(props){var
theme=props.theme,colorScale=props.colorScale;
var styleObject=theme&&theme.pie&&theme.pie.style?theme.pie.style:{};
var style=_victoryCore.Helpers.getStyles(props.style,styleObject,"auto","100%");
var colors=Array.isArray(colorScale)?colorScale:_victoryCore.Style.getColorScale(colorScale);
var padding=_victoryCore.Helpers.getPadding(props);
var radius=this.getRadius(props,padding);
var data=_victoryCore.Data.getData(props);
var slices=this.getSlices(props,data);
var pathFunction=d3Shape.arc().
cornerRadius(props.cornerRadius).
outerRadius(radius).
innerRadius(props.innerRadius);
return{style:style,colors:colors,padding:padding,radius:radius,data:data,slices:slices,pathFunction:pathFunction};
},

getColor:function getColor(style,colors,index){
if(style&&style.data&&style.data.fill){
return style.data.fill;
}
return colors&&colors[index%colors.length];
},

getRadius:function getRadius(props,padding){
return Math.min(
props.width-padding.left-padding.right,
props.height-padding.top-padding.bottom)/
2;
},

getLabelPosition:function getLabelPosition(radius,labelRadius,style){

var padding=style&&style.padding||0;
var arcRadius=labelRadius||radius+padding;
return d3Shape.arc().
outerRadius(arcRadius).
innerRadius(arcRadius);
},

getLabelOrientation:function getLabelOrientation(slice){
var radiansToDegrees=function radiansToDegrees(radians){
return radians*(180/Math.PI);
};
var start=radiansToDegrees(slice.startAngle);
var end=radiansToDegrees(slice.endAngle);
var degree=start+(end-start)/2;
if(degree<45||degree>315){
return"top";
}else if(degree>=45&&degree<135){
return"right";
}else if(degree>=135&&degree<225){
return"bottom";
}else{
return"left";
}
},

getTextAnchor:function getTextAnchor(orientation){
if(orientation==="top"||orientation==="bottom"){
return"middle";
}
return orientation==="right"?"start":"end";
},

getVerticalAnchor:function getVerticalAnchor(orientation){
if(orientation==="left"||orientation==="right"){
return"middle";
}
return orientation==="bottom"?"start":"end";
},

getLabelText:function getLabelText(props,datum,index){
var text=void 0;
if(datum.label){
text=datum.label;
}else if(Array.isArray(props.labels)){
text=props.labels[index];
}else{
text=(0,_isFunction3.default)(props.labels)?props.labels(datum):datum.xName||datum._x;
}
return this.checkForValidText(text);
},

getSlices:function getSlices(props,data){
var layoutFunction=d3Shape.pie().
sort(null).
startAngle(this.degreesToRadians(props.startAngle)).
endAngle(this.degreesToRadians(props.endAngle)).
padAngle(this.degreesToRadians(props.padAngle)).
value(function(datum){return datum._y;});
return layoutFunction(data);
}};