Object.defineProperty(exports,"__esModule",{value:true});var _defaults2=require("lodash/defaults");var _defaults3=_interopRequireDefault(_defaults2);var _omit2=require("lodash/omit");var _omit3=_interopRequireDefault(_omit2);var _sortBy2=require("lodash/sortBy");var _sortBy3=_interopRequireDefault(_sortBy2);var _pick2=require("lodash/pick");var _pick3=_interopRequireDefault(_pick2);var _assign2=require("lodash/assign");var _assign3=_interopRequireDefault(_assign2);
var _victoryCore=require("victory-core");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}exports.default=

{
getBaseProps:function getBaseProps(props,fallbackProps){var _this=this;
props=_victoryCore.Helpers.modifyProps(props,fallbackProps,"candlestick");
var calculatedValues=this.getCalculatedValues(props);var
data=calculatedValues.data,style=calculatedValues.style,scale=calculatedValues.scale,domain=calculatedValues.domain;var _props=
props,groupComponent=_props.groupComponent,width=_props.width,height=_props.height,padding=_props.padding,standalone=_props.standalone,theme=_props.theme;
var initialChildProps={parent:{
domain:domain,scale:scale,width:width,height:height,data:data,standalone:standalone,theme:theme,style:style.parent}};


return data.reduce(function(childProps,datum,index){
var eventKey=datum.eventKey||index;
var x=scale.x(datum._x1!==undefined?datum._x1:datum._x);
var y1=scale.y(datum._high);
var y2=scale.y(datum._low);
var candleHeight=Math.abs(scale.y(datum._open)-scale.y(datum._close));
var y=scale.y(Math.max(datum._open,datum._close));
var dataStyle=_this.getDataStyles(datum,style.data,props);
var dataProps={
x:x,y:y,y1:y1,y2:y2,candleHeight:candleHeight,scale:scale,data:data,datum:datum,groupComponent:groupComponent,
index:index,style:dataStyle,padding:padding,width:width};


childProps[eventKey]={
data:dataProps};

var text=_this.getLabelText(props,datum,index);
if(text!==undefined&&text!==null||props.events||props.sharedEvents){
childProps[eventKey].labels=_this.getLabelProps(dataProps,text,style);
}

return childProps;
},initialChildProps);
},

getLabelProps:function getLabelProps(dataProps,text,calculatedStyle){var
x=dataProps.x,y1=dataProps.y1,index=dataProps.index,scale=dataProps.scale,datum=dataProps.datum,data=dataProps.data;
var labelStyle=this.getLabelStyle(calculatedStyle.labels,dataProps)||{};
return{
style:labelStyle,
y:y1-(labelStyle.padding||0),
x:x,
text:text,
index:index,
scale:scale,
datum:datum,
data:data,
textAnchor:labelStyle.textAnchor,
verticalAnchor:labelStyle.verticalAnchor||"end",
angle:labelStyle.angle};

},

getCalculatedValues:function getCalculatedValues(props){var
theme=props.theme;
var defaultStyle=theme&&theme.candlestick&&theme.candlestick.style?
theme.candlestick.style:{};
var style=_victoryCore.Helpers.getStyles(props.style,defaultStyle,"auto","100%");
var data=_victoryCore.Data.addEventKeys(props,this.getData(props));
var range={
x:_victoryCore.Helpers.getRange(props,"x"),
y:_victoryCore.Helpers.getRange(props,"y")};

var domain={
x:this.getDomain(props,"x"),
y:this.getDomain(props,"y")};

var scale={
x:_victoryCore.Scale.getBaseScale(props,"x").domain(domain.x).range(range.x),
y:_victoryCore.Scale.getBaseScale(props,"y").domain(domain.y).range(range.y)};

return{domain:domain,data:data,scale:scale,style:style};
},

getData:function getData(props){
if(!props.data||props.data.length<1){
_victoryCore.Log.warn("This is an empty dataset.");
return[];
}
var stringMap={
x:_victoryCore.Data.createStringMap(props,"x")};


var accessor={
x:_victoryCore.Helpers.createAccessor(props.x!==undefined?props.x:"x"),
open:_victoryCore.Helpers.createAccessor(props.open!==undefined?props.open:"open"),
close:_victoryCore.Helpers.createAccessor(props.close!==undefined?props.close:"close"),
high:_victoryCore.Helpers.createAccessor(props.high!==undefined?props.high:"high"),
low:_victoryCore.Helpers.createAccessor(props.low!==undefined?props.low:"low")};

return this.sortData(props.data.map(function(datum,index){
var evaluatedX=accessor.x(datum);
var _x=evaluatedX!==undefined?evaluatedX:index;
var _open=accessor.open(datum);
var _close=accessor.close(datum);
var _high=accessor.high(datum);
var _low=accessor.low(datum);
var _y=[_open,_close,_high,_low];
return(0,_assign3.default)(
{},
datum,
{_x:_x,_y:_y,_open:_open,_close:_close,_high:_high,_low:_low},
typeof _x==="string"?{_x:stringMap.x[_x],x:_x}:{});

}),props.sortKey);
},

sortData:function sortData(dataset,sortKey){
if(!sortKey){
return dataset;
}

if(sortKey==="x"||sortKey==="y"){
sortKey="_"+sortKey;
}

return(0,_sortBy3.default)(dataset,sortKey);
},

getDomain:function getDomain(props,axis){
var domain=void 0;
if(props.domain&&props.domain[axis]){
domain=props.domain[axis];
}else if(props.domain&&Array.isArray(props.domain)){
domain=props.domain;
}else{
var dataset=this.getData(props);
var allData=dataset.reduce(function(memo,datum){
return Array.isArray(datum["_"+axis])?
memo.concat.apply(memo,_toConsumableArray(datum["_"+axis])):memo.concat(datum["_"+axis]);
},
[]);

if(allData.length<1){
return _victoryCore.Scale.getBaseScale(props,axis).domain();
}

var min=Math.min.apply(Math,_toConsumableArray(allData));
var max=Math.max.apply(Math,_toConsumableArray(allData));
if(min===max){
var adjustedMax=max===0?1:max+max;
return[0,adjustedMax];
}
domain=[min,max];
}
return _victoryCore.Domain.cleanDomain(_victoryCore.Domain.padDomain(domain,props,axis),props);
},

isTransparent:function isTransparent(attr){
return attr==="none"||attr==="transparent";
},

getDataStyles:function getDataStyles(datum,style,props){
style=style||{};
var stylesFromData=(0,_omit3.default)(datum,[
"x","y","size","name","label","open","close","high","low"]);

var candleColor=datum.open>datum.close?
props.candleColors.negative:props.candleColors.positive;
var fill=datum.fill||style.fill||candleColor;
var strokeColor=datum.stroke||style.stroke;
var stroke=this.isTransparent(strokeColor)?fill:strokeColor||"black";
return(0,_defaults3.default)({},stylesFromData,{stroke:stroke,fill:fill},style);
},

getLabelText:function getLabelText(props,datum,index){
return datum.label||(Array.isArray(props.labels)?
props.labels[index]:props.labels);
},

getLabelStyle:function getLabelStyle(labelStyle,dataProps){
labelStyle=labelStyle||{};var
size=dataProps.size,style=dataProps.style;
var matchedStyle=(0,_pick3.default)(style,["opacity","fill"]);
var padding=labelStyle.padding||size*0.25;
return(0,_defaults3.default)({},labelStyle,matchedStyle,{padding:padding});
}};